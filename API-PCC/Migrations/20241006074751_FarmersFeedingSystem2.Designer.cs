// <auto-generated />
using System;
using API_PCC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_PCC.Migrations
{
    [DbContext(typeof(PCC_DEVContext))]
    [Migration("20241006074751_FarmersFeedingSystem2")]
    partial class FarmersFeedingSystem2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API_PCC.EntityModels.A_Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("Created_Date");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<int>("animalId")
                        .HasColumnType("int");

                    b.Property<int>("damId")
                        .HasColumnType("int");

                    b.Property<bool>("deleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<int>("sireId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("damId");

                    b.HasIndex("sireId");

                    b.ToTable("A_Family", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.ABuffAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnimalIdNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Animal_ID_Number");

                    b.Property<string>("AnimalName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Animal_Name");

                    b.Property<string>("BirthType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Birth_Type");

                    b.Property<int?>("BloodCode")
                        .HasColumnType("int")
                        .HasColumnName("Blood_Comp");

                    b.Property<double?>("BloodComp")
                        .HasColumnType("float");

                    b.Property<decimal?>("BloodResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BreedCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Breed_Code");

                    b.Property<string>("CountryOfBirth")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Country_Of_Birth");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("Created_Date");

                    b.Property<int?>("DamId")
                        .HasColumnType("int")
                        .HasColumnName("Dam_ID");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateOfAcquisition")
                        .HasColumnType("date")
                        .HasColumnName("Date_Of_Acquisition");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_Birth");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("HerdCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Code");

                    b.Property<string>("Marking")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("OriginOfAcquisition")
                        .HasColumnType("int")
                        .HasColumnName("Origin_Of_Acquisition");

                    b.Property<string>("Photo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<string>("RfidNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("RFID_Number");

                    b.Property<string>("Sex")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SireId")
                        .HasColumnType("int")
                        .HasColumnName("Sire_ID");

                    b.Property<string>("Status")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TypeOfOwnership")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Type_Of_Ownership");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("breedRegistryNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("A_Buff_Animal", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.BuffHerdJoinTable", b =>
                {
                    b.Property<int>("BuffHerdJoinTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Join_BuffHerd_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuffHerdJoinTableId"), 1L, 1);

                    b.Property<int>("BuffHerdId")
                        .HasColumnType("int")
                        .HasColumnName("Buff_Herd_Id");

                    b.Property<int>("BuffaloTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Buffalo_Type_Id");

                    b.Property<int>("FeedingSystemId")
                        .HasColumnType("int")
                        .HasColumnName("Feeding_System_Id");

                    b.HasKey("BuffHerdJoinTableId")
                        .HasName("PK_tbl_Join_BuffHerd");

                    b.ToTable("tbl_Join_BuffHerd", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.DamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Blood_Code");

                    b.Property<string>("BreedCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Breed_Code");

                    b.Property<string>("DamIdNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Dam_Id_Number");

                    b.Property<string>("DamName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Dam_Name");

                    b.Property<string>("DamRegistrationNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Dam_Registration_Number");

                    b.HasKey("Id");

                    b.ToTable("tbl_DamModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.FarmFeedingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Created_By")
                        .HasColumnType("int");

                    b.Property<int>("Deleted_By")
                        .HasColumnType("int");

                    b.Property<int>("Farmer_Id")
                        .HasColumnType("int");

                    b.Property<int>("FeedingSystem_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tbl_FarmerFeedingSystem");
                });

            modelBuilder.Entity("API_PCC.EntityModels.SireModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SireIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SireName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SireRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSireModels");
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblAudittrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actions")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Module")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("tbl_audittrail", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblBloodCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Criteria")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Formula")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblBLoodCalculator", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblBLoodCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("bloodCalculators");
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblDataGroup", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("tbl_DataGroup", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblFarmerBreedType", b =>
                {
                    b.Property<int?>("BreedTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BreedType_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_At");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("Deleted_By");

                    b.Property<int?>("FarmerId")
                        .HasColumnType("int")
                        .HasColumnName("Farmer_Id");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<short?>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("Is_Deleted");

                    b.ToTable("tbl_FarmerBreedType", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblFarmers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Deleted_By")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmerAffliation_Id")
                        .HasColumnType("int");

                    b.Property<int>("FarmerClassification_Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Manager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Updated_By")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Farmers");
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblFarmOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_FarmOwner", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblHerdFarmer", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_At");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("Deleted_By");

                    b.Property<int?>("FarmerId")
                        .HasColumnType("int")
                        .HasColumnName("Farmer_Id");

                    b.Property<int?>("HerdId")
                        .HasColumnType("int")
                        .HasColumnName("Herd_Id");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<short?>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("Is_Deleted");

                    b.ToTable("tbl_HerdFarmer", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblOriginOfAcquisitionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barangay")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("City")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Province")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Region")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_OriginOfAcquisitionModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblSetting", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BreedRegistryNumberLength")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Breed_Registry_Number_Length");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Business_Name");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Contact_Number");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("HerdCodeLength")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Herd_Code_Length");

                    b.Property<string>("IdNumberLength")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Number_Length");

                    b.Property<string>("PedigreeCertSignatoryFirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pedigree_Cert_Signatory_FirstName");

                    b.Property<string>("PedigreeCertSignatoryLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pedigree_Cert_Signatory_LastName");

                    b.Property<string>("PedigreeCertSignatorySignature")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Pedigree_Cert_Signatory_Signature");

                    b.Property<string>("PedigreeSignatoryFirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pedigree_Signatory_FirstName");

                    b.Property<string>("PedigreeSignatoryLastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pedigree_Signatory_LastName");

                    b.Property<string>("PedigreeSignatorySignature")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Pedigree_Signatory_Signature");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("Watermark")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__tbl_Sett__3214EC0719BE9FC7");

                    b.ToTable("tbl_Settings", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblSireModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Blood_Code");

                    b.Property<string>("BreedCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Breed_Code");

                    b.Property<string>("SireIdNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Sire_Id_Number");

                    b.Property<string>("SireName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Sire_Name");

                    b.Property<string>("SireRegistrationNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Sire_Registration_Number");

                    b.HasKey("Id");

                    b.ToTable("tbl_SireModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblUserAccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Module")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("module");

                    b.Property<int>("UserModelId")
                        .HasColumnType("int")
                        .HasColumnName("userModelId");

                    b.HasKey("Id");

                    b.ToTable("tbl_UserAccessModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblUserAccessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<int>("UserAccessModelId")
                        .HasColumnType("int")
                        .HasColumnName("userAccessModelId");

                    b.HasKey("Id");

                    b.ToTable("tbl_UserAccessType", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TblUserTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("code")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("userAccesasId")
                        .HasColumnType("int")
                        .HasColumnName("userAccesasId");

                    b.HasKey("Id");

                    b.ToTable("tbl_UserTypeModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.TransferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Mobile_Number");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Telephone_Number");

                    b.Property<byte[]>("TransferFile")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Transfer_File");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("transferNumber")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Transfer_Number");

                    b.HasKey("Id")
                        .HasName("PK_tbl_Transfer");

                    b.HasIndex("AnimalId");

                    b.HasIndex("OwnerId");

                    b.ToTable("tbl_TransferModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserAccessModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userModelId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userModelId");

                    b.ToTable("UserAccessModel");
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserAccessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("userAccessModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userAccessModelId");

                    b.ToTable("UserAccessType");
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserActionTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Module")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("User_ActionTable", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserModuleTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Module")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("ParentModule")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User_ModuleTable", (string)null);
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserUserTypeAccessTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("Module")
                        .HasColumnType("int");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User_UserTypeAccessTable", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ABirthType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BirthTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Birth_Type_Code");

                    b.Property<string>("BirthTypeDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Birth_Type_Desc");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("A_Birth_Type", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ABloodComp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodCode")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Blood_Code");

                    b.Property<string>("BloodDesc")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("Blood_Desc");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<double?>("From")
                        .HasColumnType("float");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("To")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("damBreed")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Dam_Breed");

                    b.Property<string>("sireBreed")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Sire_Breed");

                    b.HasKey("Id");

                    b.ToTable("A_Blood_Comp", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ABreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BreedCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Breed_Code");

                    b.Property<string>("BreedDesc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Breed_Desc");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("A_Breed", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ActionTbl", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Action_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Action_name");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("ModuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Module_Id");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("ActionId")
                        .HasName("PK_Action");

                    b.ToTable("Action_tbl", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ATypeOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeOwnCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Type_Own_Code");

                    b.Property<string>("TypeOwnDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Type_Own_Desc");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("A_Type_Ownership", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.GetUserLogInResult", b =>
                {
                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActiveStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AgreementStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CenterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Restored")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Delete_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Deleted_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("JWToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Restored_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("API_PCC.Models.HBuffaloType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BreedTypeCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Breed_Type_Code");

                    b.Property<string>("BreedTypeDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Breed_Type_Desc");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("H_Buffalo_Type", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.HBuffHerd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Center")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("FarmAddress")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Farm_Address");

                    b.Property<string>("FarmAffilCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Farm_Affil_Code");

                    b.Property<string>("FarmManager")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Farm_Manager");

                    b.Property<string>("HerdClassDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Class_Desc");

                    b.Property<string>("HerdCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Code");

                    b.Property<string>("HerdName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Name");

                    b.Property<int>("HerdSize")
                        .HasColumnType("int")
                        .HasColumnName("Herd_Size");

                    b.Property<string>("OrganizationName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Organization_name");

                    b.Property<int>("Owner")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("H_Buff_Herd", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.HFarmerAffiliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("FCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("F_Code");

                    b.Property<string>("FDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("F_Desc");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK_H");

                    b.ToTable("H_Farmer_Affiliation", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.HFeedingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("FeedingSystemCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FeedingSystemDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("H_Feeding_System", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.HHerdClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("HerdClassCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Class_Code");

                    b.Property<string>("HerdClassDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Herd_Class_Desc");

                    b.Property<int?>("LevelFrom")
                        .HasColumnType("int")
                        .HasColumnName("Level_from");

                    b.Property<int?>("LevelTo")
                        .HasColumnType("int")
                        .HasColumnName("Level_to");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK_H_Herd_Type");

                    b.ToTable("H_Herd_Classification", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.ModuleTbl", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Module_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Module_Name");

                    b.Property<string>("ParentModule")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Parent_Module");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("ModuleId")
                        .HasName("PK_Module");

                    b.ToTable("Module_tbl", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblApiTokenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApiToken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Role")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_ApiTokenModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Ipaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblAttempts");
                });

            modelBuilder.Entity("API_PCC.Models.TblCenterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CenterCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CenterDesc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Center_desc");

                    b.Property<string>("CenterName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("tbl_CenterModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblMailSenderCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_MailSenderCredential");

                    b.ToTable("tbl_MailSenderCredential", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblRegistrationOtpmodel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Otp")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("OTP");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_RegistrationOTPModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreedRegistryNumberLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerdCodeLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumberLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeCertSignatoryFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeCertSignatoryLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeCertSignatorySignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeSignatoryFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeSignatoryLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PedigreeSignatorySignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Watermark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblSettings");
                });

            modelBuilder.Entity("API_PCC.Models.TblStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_StatusModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblTokenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_TokenModel", (string)null);
                });

            modelBuilder.Entity("API_PCC.Models.TblUsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("AgreementStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("CenterId")
                        .HasColumnType("int");

                    b.Property<string>("Cno")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("date")
                        .HasColumnName("Date_Deleted");

                    b.Property<DateTime?>("DateRestored")
                        .HasColumnType("date")
                        .HasColumnName("Date_Restored");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("Delete_Flag");

                    b.Property<string>("DeletedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deleted_By");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("FilePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Fname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Fullname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Gender")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Jwtoken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("JWToken");

                    b.Property<string>("Lname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RememberToken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RestoredBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Restored_By");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("isFarmer")
                        .HasColumnType("bit")
                        .HasColumnName("isFarmer");

                    b.HasKey("Id")
                        .HasName("PK_UsersModel");

                    b.ToTable("tbl_UsersModel", (string)null);
                });

            modelBuilder.Entity("HBuffHerdHBuffaloType", b =>
                {
                    b.Property<int>("buffHerdId")
                        .HasColumnType("int");

                    b.Property<int>("buffaloTypeId")
                        .HasColumnType("int");

                    b.HasKey("buffHerdId", "buffaloTypeId");

                    b.HasIndex("buffaloTypeId");

                    b.ToTable("HBuffHerdHBuffaloType");
                });

            modelBuilder.Entity("HBuffHerdHFeedingSystem", b =>
                {
                    b.Property<int>("buffHerdId")
                        .HasColumnType("int");

                    b.Property<int>("feedingSystemId")
                        .HasColumnType("int");

                    b.HasKey("buffHerdId", "feedingSystemId");

                    b.HasIndex("feedingSystemId");

                    b.ToTable("HBuffHerdHFeedingSystem");
                });

            modelBuilder.Entity("API_PCC.EntityModels.A_Family", b =>
                {
                    b.HasOne("API_PCC.EntityModels.ABuffAnimal", "dam")
                        .WithMany()
                        .HasForeignKey("damId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PCC.EntityModels.ABuffAnimal", "sire")
                        .WithMany()
                        .HasForeignKey("sireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dam");

                    b.Navigation("sire");
                });

            modelBuilder.Entity("API_PCC.EntityModels.TransferModel", b =>
                {
                    b.HasOne("API_PCC.EntityModels.ABuffAnimal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PCC.EntityModels.TblFarmOwner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserAccessModel", b =>
                {
                    b.HasOne("API_PCC.Models.TblUsersModel", "userModel")
                        .WithMany("userAccessModels")
                        .HasForeignKey("userModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userModel");
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserAccessType", b =>
                {
                    b.HasOne("API_PCC.EntityModels.UserAccessModel", "accessModel")
                        .WithMany("userAccess")
                        .HasForeignKey("userAccessModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("accessModel");
                });

            modelBuilder.Entity("HBuffHerdHBuffaloType", b =>
                {
                    b.HasOne("API_PCC.Models.HBuffHerd", null)
                        .WithMany()
                        .HasForeignKey("buffHerdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PCC.Models.HBuffaloType", null)
                        .WithMany()
                        .HasForeignKey("buffaloTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HBuffHerdHFeedingSystem", b =>
                {
                    b.HasOne("API_PCC.Models.HBuffHerd", null)
                        .WithMany()
                        .HasForeignKey("buffHerdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PCC.Models.HFeedingSystem", null)
                        .WithMany()
                        .HasForeignKey("feedingSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_PCC.EntityModels.UserAccessModel", b =>
                {
                    b.Navigation("userAccess");
                });

            modelBuilder.Entity("API_PCC.Models.TblUsersModel", b =>
                {
                    b.Navigation("userAccessModels");
                });
#pragma warning restore 612, 618
        }
    }
}
